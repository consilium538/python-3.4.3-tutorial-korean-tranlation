1. 입맛 돋우기

당신이 컴퓨터에서 많은 작업을 한다면, 자동화하고 싶은 작업이 몇 가지 있을 것이다. 예를 들면 검색, 텍스트 파일의 수많은 숫자들 바꾸기, 이름을 변경하고 복잡한 방법으로 사진 파일들을 재 배열하고 싶을지도 모른다. 아니면 작은 사용자 지정 데이터베이스, 전문 GUI 응용 프로그램, 간단한 게임을 만들고 싶을지도 모른다. 

당신이 전문 소프트웨어 개발자라면 평소에  C, C ++, 자바 라이브러리를 사용하면서 코딩, 컴파일, 테스트, 재컴파일 과정이 너무 느리다고 생각할 것이다. 아마 당신은 라이브러리에 대한 테스트 스위트를 작성하고 테스트 코드를 짜는 지루한 작업을 할 수도 있다. 아니면 확장 언어를 사용할 수 있는 프로그램을 작성했다면, 설계 및 응용 프로그램에 대한 완전히 새로운 언어를 구현하고 싶지는 않을 것이다. 

파이썬은 바로 당신을 위한 언어다.

이러한 작업에 유닉스 쉘 스크립트나 Windows 배치 파일을 쓸 수도 있다. 하지만 쉘 스크립트는 파일을 주위에 이동하고 바꾸는데는 적합하지만 GUI 응용 프로그램이나 게임에 적합 텍스트 데이터에는 적합하지 않다. 당신은 C, C ++, Java 프로그램을 작성할 수 있지만, 겨우 첫 번째 초안 프로그램을 얻기 위해 엄청난 개발 시간이 걸릴 수 있다. 파이썬은 Windows, Mac OS X, 유닉스 운영 체제에서 간단하게 사용할 수 있으며, 더 빨리 일을 하는 데 도움이 될 것이다.

파이썬은 사용하기 간단하지만 쉘 스크립트나 배치 파일이 하는 것보다 훨씬 많은, 큰 프로그램을 위한 구조 및 지원을 제공하는 '진짜' 프로그래밍 언어이다. 또한 C보다 훨씬 많은 오류 검사를 제공하고, 매우 높은 수준의 언어로써 어레이 및 사전 등 높은 수준의 내장 데이터 형식도 포함한다. 그것의 일반적인 데이터 형식 때문에 파이썬은 awk, 심지어 펄이 할 수 있는 것보다 훨씬 더 큰 도메인 문제에 적용 할 수 있다. 이미 많은 것들이 적어도 그 언어들에서 만큼 파이썬에서도 쉽게 할 수 있다.

파이썬은 프로그램을 쪼개 다른 파이썬 프로그램에서 재사용 할 수있는 모듈로 만들수 있다. 함께 제공되는 큰 컬렉션의 표준 모듈은 당신의 프로그램의 기초로 사용하거나 파이썬으로 프로그램 학습을 시작하는데 사용할 수 있다. 이 모듈 중 일부는 파일 I / O, 시스템 호출, 소켓, 심지어 Tk의 같은 그래픽 사용자 인터페이스 툴킷 같은 것들도 제공한다.
파이썬은 인터프리터 언어로, 컴파일과 연결이 필요하지 않기 때문에 프로그램 개발 과정에서 많은 시간을 절약 할 수 있다. 인터프리터는 대화형으로도 사용할 수 있다. 이는 쉽게 일회용 프로그램을 작성, 또는 상향식 (bottom-up) 프로그램 개발시 기능을 테스트하기 위해, 언어의 기능을 시험해볼 수있다. 또한 편리한 책상 계산기이기도 하다.

파이썬은 프로그램을 컴팩트하고 읽기 쉽게 기록한다. 파이썬으로 작성된 프로그램은 동등한 C, C ++, Java 프로그램보다 훨씬 짧다. 거기엔 몇가지 이유가 있다.

ㅇ 높은 수준의 데이터 타입은 하나의 명령문으로 복잡한 작업을 표현할 수 있도록 한다. 

ㅇ 문은 시작 괄호와 끝 괄호 대신 들여쓰기에 의해 이루어진다. 

ㅇ 변수 선언, 인수 선언이 필요없다.

파이썬은 확장이 쉽다. 당신이 C로 프로그래밍하는 방법을 알고있는 경우는 통역에 새 내장 함수 또는 모듈을 추가, 하나 최대 속도로 중요한 작업을 수행하기 위해, 또는 만 사용할 수 있습니다 라이브러리 파이썬 프로그램을 연결하기 쉬운 바이너리 형식 (예 : 공급 업체 특정 그래픽 라이브러리 등). 당신이 정말로 푹 일단, 당신은 C로 작성된 응용 프로그램에 파이썬 인터프리터를 연결하고 해당 응용 프로그램에 대한 확장 또는 명령 언어로 사용할 수 있습니다.

여담이지만, 파이썬은 BBC 쇼 "몬티 파이썬의 플라잉 서커스"에서 따서 명명했다. 파충류와는 아무 상관이 없다. 문서에 몬티 파이썬에 대한 가벼운 풍자를 하는 것은 허용될 뿐 아니라, 권장한다!

이제 당신은 파이썬에 대해 매우 흥미를 느낄 것이고, 좀 더 세부적인 시행을 해보고 싶을 것이다. 언어를 배울 수있는 가장 좋은 방법은 직접 사용하는 것이기 때문에, 튜토리얼을 읽으면서 파이썬 인터프리터를 실습할 수 있도록 구성했다. 

다음 장에서는 인터프리터를 사용하는 메커니즘을 설명한다. 이것은 다소 지루한 내용이긴 하지만 나중에 나올 내용을 이해하는 데 필수적인 것들이다. 

튜토리얼의 나머지 기능과 모듈, 그리고 마지막으로 예외 및 사용자 정의 클래스와 같은 고급 개념에 터치를 통해 간단하게 표현, 구문 및 데이터 유형, 시작, 예제를 통해 파이썬 언어와 시스템의 다양한 기능을 소개합니다.
